version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:stable
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y ninja-build clang llvm lcov curl python3
            sudo ln -sf $(which llvm-cov) /usr/bin/gcov            
            sudo apt-get install -y software-properties-common lsb-release wget
            wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | sudo apt-key add -
            sudo apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
            sudo apt-get update
            sudo apt-get install -y cmake
            cmake --version
            git clone https://github.com/microsoft/vcpkg.git
            cd vcpkg
            ./bootstrap-vcpkg.sh
            ./vcpkg install gtest

      - run:
          name: Configure with CMake
          command: |
            mkdir -p build
            cd build
            cmake -G Ninja \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_TOOLCHAIN_FILE=${CIRCLE_WORKING_DIRECTORY}/vcpkg/scripts/buildsystems/vcpkg.cmake \
              -DVCPKG_TARGET_TRIPLET=x64-linux \
              -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_CXX_COMPILER=/usr/bin/clang++ \
              ..

      - run:
          name: Build Project
          command: |
            cd build
            ninja


      - run:
          name: Run Tests in Parallel
          command: |
            cd build
            export LLVM_PROFILE_FILE="default-%p.profraw"
            ctest -j $(nproc) --output-on-failure --no-compress-output --output-junit junit.xml 


      - run:
          name: Generate Coverage Report
          command: |
            ls -al
            cd build
            ls -al
            find . -name "*.profraw" 
            llvm-profdata merge -sparse tests/**/default-*.profraw -o default.profdata
            llvm-cov export -format=lcov ./cpp_base -instr-profile=default.profdata > coverage.info
            genhtml coverage.info --output-directory coverage_report


      - store_test_results:
          path: build/junit.xml

      - store_artifacts:
          path: build/coverage_report
          destination: coverage_report

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
